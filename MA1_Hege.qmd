---
title: "Mandatory Assignments in Econometrics"
author: "Hege Johansen"
format: html
editor: visual
bibliography: [Econometrics-Hege.bib]
csl: apa-no-ampersand.csl.
---

# Mandatory Assignment 1

## Introduction

In this assignment I am going to look at two measures, GDP per Capita and the watertight GDP Gini-coefficient for a group of countries.

For GDP per capita I will look at the countries of Finland and Turkey, both combined and separate.
For the watertight GDP Gini-coefficient I will take a look at Finland, Turkey, United Kingdom and Czech Republic, both combined and separate.

## Data

The data used in this assignment is collected from Eurostat[^1] and GOV:UK[^2]
. The data had to be collected from two sources because the UK is not a member of the European Union
.

[^1]: Source: https://ec.europa.eu/eurostat/web/regions/data/database

[^2]: Source: [Research and statistics - GOV.UK (www.gov.uk)](https://www.gov.uk/search/research-and-statistics)

### **GDP data**

The GDP data for Czech Republic, Finland and Turkey is imported from the dataset nama_10r_3gdp[^3],, and is measured in million Euros, but is converted to Euros.
The GDP for UK is imported from GOV:UK[^4] and is measured in million pounds sterling, but is converted to Euro
.

[^3]: Souce: <https://ec.europa.eu/eurostat/databrowser/view/nama_10r_3gdp/default/table?lang=en>

[^4]: \# Table 5: https://www.ons.gov.uk/economy/grossdomesticproductgdp/datasets/regionalgrossdomesticproductallnutslevelregions

Accoding to Eurostadt[^5], Gross domestic product (GDP) at market prices is the final result of the production activity of resident producer units.
The measure is in million euros.

[^5]: Source: [s://ec.europa.eu/eurostat/cache/metadata/en/reg_eco10_esms.htm](https://ec.europa.eu/eurostat/cache/metadata/en/reg_eco10_esms.htm)

### **Population data**

The population data for Czech Republic, Finland and Turkey is imported from the dataset demo_r\_pjanaggr3[^6], and is measured in total population of a region at a given NUTS level[^7]
. The population data is imported from GOV:UK, and is measured Total resident population numbers, persons
[^8].

[^6]: Source: <https://ec.europa.eu/eurostat/databrowser/view/demo_r_pjanaggr3/default/table?lang=en>

[^7]: Source: <https://ec.europa.eu/eurostat/cache/metadata/en/demo_r_gind3_esms.htm>

[^8]: Source: https://www.ons.gov.uk/economy/grossdomesticproductgdp/datasets/regionalgrossdomesticproductallnutslevelregions

```{r setup, echo=FALSE}
#| output: false

library(tidyverse)
library(tinytex)
library(dplyr)
library(ggplot2)
library(dineq)
library(readxl)
library(magrittr)
library(vtable)
library(gridExtra)
library(huxtable)

```

```{r EU-data, echo=FALSE}

#| output: false

# EU data taken from: 
  # https://ec.europa.eu/eurostat/databrowser/view/demo_r_pjanaggr3/default/table?lang=en
  # https://ec.europa.eu/eurostat/databrowser/view/nama_10r_3gdp/default/table?lang=en
 

eu_pop_nuts3 <- read_excel("demo_r_pjanaggr3__custom_3572346_spreadsheet.xlsx", 
    sheet = "cleaned_pop")
eu_gdp_nuts3 <- read_excel("nama_10r_3gdp__custom_3572365_spreadsheet.xlsx", 
    sheet = "cleaned_gdp")
```

```{r UK-data, echo=FALSE}

#| output: false

# Uk data taken from:
  # https://www.ons.gov.uk/economy/grossdomesticproductgdp/datasets/regionalgrossdomesticproductallnutslevelregions

  uk_pop <- read_excel("regionalgrossdomesticproductgdpallitlregions.xlsx", 
      sheet = "Table 6", skip = 1)
  
  uk_gdp <- read_excel("regionalgrossdomesticproductgdpallitlregions.xlsx", 
      sheet = "Table 5", skip = 1)
   
  # Drop non nuts 3 regions
   uk_gdp_nuts3 <- uk_gdp %>%
    # Count the numbers of id characters 
    mutate("N_car_id" = nchar(uk_gdp$`ITL code`)) %>%
    # Keep thoes that have 5 e.g. NUTS3 Regions
   filter(N_car_id == 5)
   
   uk_pop_nuts3 <- uk_pop %>%
    # Count the numbers of id characters 
    mutate("N_car_id" = nchar(uk_pop$`ITL code`)) %>%
    # Keep thoes that have 5 e.g. NUTS3 Regions
    filter(N_car_id == 5) 

```

```{r EU-popdata, echo=FALSE}

#| output: false

# Transformation from wide to long
 eu_pop_nuts3 <- eu_pop_nuts3 %>% 
   mutate_if(is.numeric,as.character, is.factor, as.character) %>% 
   pivot_longer(
    cols = c('2000':'2020'),
    names_to = "Year",
    values_to = "Population"
  )
 
  # Renaming geo column
      eu_pop_nuts3 <- rename(eu_pop_nuts3, "Region_code" = "GEO (Codes)")
```

```{r UK-pop-data, echo=FALSE}

#| output: false

# Transformation from wide to long
  uk_pop_nuts3 <- uk_pop_nuts3 %>% 
   mutate_if(is.numeric,as.character, is.factor, as.character) %>% 
   pivot_longer(
    cols = c('2000':'2020'),
    names_to = "Year",
    values_to = "Population"
    )
  
# Renaming a column
   uk_pop_nuts3 <- rename(uk_pop_nuts3, "Region_code" = "ITL code")
# Keep relevant vars
   uk_pop_nuts3 <- uk_pop_nuts3 %>% select("Region_code", "Year","Population")    

```

```{r Merge of UK and EU data, echo=FALSE}

#| output: false

pop_all_nuts3 <- rbind(uk_pop_nuts3, eu_pop_nuts3)

```

```{r EU-gdp-data, echo=FALSE}

#| output: false

# Transforming from wide to short
  eu_gdp_nuts3 <- eu_gdp_nuts3 %>%  
  mutate_if(is.numeric,as.character, is.factor, as.character) %>%  
  pivot_longer(
    cols = c('2000':'2020'),
    names_to = "Year",
    values_to = "GDP")
  
# Renaming geo column
      eu_gdp_nuts3 <- rename(eu_gdp_nuts3, "Region_code" = "GEO (Codes)")

```

```{r UK-gdp-data, echo=FALSE}

#| output: false

# Transforming from wide to short
  uk_gdp_nuts3 <- uk_gdp_nuts3 %>% 
  mutate_if(is.numeric,as.character, is.factor, as.character) %>%  
  pivot_longer(
    cols = c('2000':'2020'),
    names_to = "Year",
    values_to = "GDP")
  
# Transforming from GDP in pounds to GDP in Euro
uk_gdp_nuts3 <- uk_gdp_nuts3 %>% 
  mutate("GDP" = c(as.numeric(GDP) * 1.14))

# Renaming geo column
    uk_gdp_nuts3 <- rename(uk_gdp_nuts3, "Region_code" = "ITL code")
      
# Keep relevant vars
    uk_gdp_nuts3 <- uk_gdp_nuts3 %>% select("Region_code", "Year", "GDP")

```

```{r Merge of UK- and EU-gdp-data, echo=FALSE}

#| output: false   

gdp_all_nuts3 <- rbind(uk_gdp_nuts3, eu_gdp_nuts3 )

```

```{r Conversion from GDP in millions to GDP in ones}
#| echo: false
#| output: false

gdp_all_nuts3 <- gdp_all_nuts3 %>% 
  mutate("GDP" = as.numeric(GDP) * 1000000) 

```

```{r Merging of gdp- and pop-tables, echo=FALSE}

#| output: false

GDPandPOP_all_nuts3 <- merge(gdp_all_nuts3, pop_all_nuts3)

```

```{r Removal of rows with missing values, echo=FALSE}

#| output: false

GDPandPOP_all_nuts3 <- na_if(GDPandPOP_all_nuts3, ":") %>% 
   na.omit(GDPandPOP_all)

```

## Calculation of GDP per Capita

The formula for calculating GDP per Capita is as follows, where the *i,* stands for NUTS3 regions.

$$
y_i=GDP_i/population_i
$$

I want to look closer at the year of 2019 since that is the last year before the Covid-pandemic.

```{r Calculation GDP per Capita-column}

# Calculation of GDP per Capita for all regions
GDPperCap_all_nuts3 <- mutate(GDPandPOP_all_nuts3, "GDP_per_capita" = as.numeric(GDPandPOP_all_nuts3$GDP) / as.numeric(GDPandPOP_all_nuts3$Population))
```

```{r transforming Population to numeric, echo=FALSE}
#| output: false

GDPperCap_all_nuts3 <- GDPperCap_all_nuts3 %>% 
  mutate(Population = as.numeric(Population))
```

```{r column for Nuts 1 id, echo=FALSE}
#| output: false
#Gen Nuts 1 id
GDPperCap_all_nuts3 %<>%  
  mutate(id_nuts0 = substr(GDPperCap_all_nuts3$"Region_code", 1,2))

#Gen Nuts 3 id
GDPperCap_all_nuts3 %<>%  
  mutate(id_nuts3 = substr(GDPperCap_all_nuts3$"Region_code", 1, 5))
  
```

### GDP per Capita by country

```{r dataframe for Finland and Turkey, echo=FALSE}

#| output: false

Finland_nuts3 <- GDPperCap_all_nuts3 %>%  
  filter(grepl("FI", id_nuts0)) 
  
Turkey_nuts3 <- GDPperCap_all_nuts3 %>% 
  filter(grepl("TR", id_nuts0)) 
 
FI_TR_nuts3 <- rbind(Finland_nuts3, Turkey_nuts3)
```

```{r echo=FALSE}

FI_TR_nuts3 %>%  
  distinct(id_nuts0, Year, .keep_all = TRUE) %>%  

  ggplot(aes(x = Year,
        y = GDP_per_capita, 
        fill = id_nuts0, 
        color = id_nuts0,
        group = id_nuts0)) +
  geom_line(lwd = 0.8) +
  labs(x = "Year", y = "GDP per capita") +
  ggtitle("Changes in GDP per Capita by country") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

When it comes to thetotal GDP for Turkey and Finland over the years, we can see that Finland has a much higher GDP per capita than Turkey.
We can see that Finland has an higher decrease in GDP per capita than Turkey, when the financial crisis hit in 2008/2009.

```{r summary of gdp Finland/Turkey 2019, echo=FALSE}
GDPperCap_all_nuts3 %>% 
  filter(Year == 2019, id_nuts0 == "FI" | id_nuts0 == "TR") %>% 
  select(GDP, Population, GDP_per_capita) %>% 
  st()
```

We can see that the highest GDP is 47 times higher than the lowest GDP, and the mean is 9 188 893 300 euros.
The highest population is almost 506 times the lowest population, and the median for the population is about 875 210.
The highest value of GDP per capita is about 57 118 euros, which is almost 27 times more than the lowest GDP.

So we can see that there is large differences between the nuts3 regions in Finland and Turkey in 2019.

### GDP per Capita - Finland

```{r GDP per capita for Finland regions, echo=FALSE}

Finland_nuts3 %>%  
  distinct(id_nuts3, Year, .keep_all = TRUE) %>% 
  ggplot(aes(x = Year, 
        y = GDP_per_capita, 
        fill = id_nuts3, 
        color = id_nuts3,
        group = id_nuts3)) +
  geom_line(lwd = 0.8) +
   labs(x = "Year", y = "GDP per capita") +
  ggtitle("Finland: GDP per capita - NUTS3") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

We can see that there are two regions in Finland that stands out from the rest (FIB1 - Helsinki and FI200 - Åland. We can also see that all but one region (FI200 -Åland) has an decrease in GDP per capita during the financial crisis in 2008/2009.

#### The 3 wealthiest regions 2019

```{r wealthiest regions in finland 2019, echo=FALSE}

FI_TR_nuts3 %>%
  filter(grepl("FI...", id_nuts3), Year == 2019) %>%
  select(id_nuts3, GDP_per_capita) %>%
  slice_max(GDP_per_capita, n = 3)
```

We can now confirm that the top two region in 2019 also are FI1B1 Helsinki and FI200 Åland.
It is not surprising that Helsinki has the highest GDP per capita in 2019, as this is the capital of Finland.

#### The 3 least wealthiest regions in 2019

```{r least wealthiest regions in finland 2019, echo=FALSE}


FI_TR_nuts3 %>%
  filter(grepl("FI...", id_nuts3), Year == 2019) %>%
  select(id_nuts3, GDP_per_capita) %>%
  slice_min(GDP_per_capita, n = 3)

```

The NUTS 3 regions in Finland that have the lowest GDP per capita is; FI1D1 - Etelä-Savo, FI1C3 - Päijät-Häme, and FI1D8 - Kainuu.

The richest NUTS3 region has 1.7 times higher GDP per capita than the poorest region.
That is not al big differnce, but we know from above that Finland is a rich country.

### GDP per Capita - Turkey

```{r creating top and bottom 5 for turkeys gdp pc, echo=FALSE}
#| output:false

# to find the top 5 and bottom 5 regions to use in a plot because the plot gets to messy if all nuts 3 regions are included.

Turkey <- Turkey_nuts3 %>%
  filter(Year == 2019) %>% 
  select(GDP_per_capita, id_nuts3) %>% 
  arrange(desc(GDP_per_capita))

Top5Turkey <- Turkey %>% slice_max(n = 5, order_by = GDP_per_capita)
  
 
Bottom5Turkey <- Turkey %>% slice_min(n = 5, order_by = GDP_per_capita)

Turkey_top_bottom5 <- rbind(Top5Turkey, Bottom5Turkey) 
```

```{r GDP per capita for Turkey regions, echo=FALSE}


GDPperCap_all_nuts3 %>%
  filter(id_nuts3 == "TR100" | id_nuts3 == "TR421" | id_nuts3 == "TR510" | id_nuts3 == "TR211" | id_nuts3 == "TR611" | id_nuts3 == "TRA21" | id_nuts3 == "TRC21" | id_nuts3 == "TRB21" | id_nuts3 == "TRB23" | id_nuts3 == "TRC12") %>% 
  select(Year, GDP_per_capita, id_nuts3) %>% 
    ggplot(aes(x = Year, 
        y = GDP_per_capita, 
        fill = id_nuts3, 
        color = id_nuts3,
        group = id_nuts3)) +
  geom_line(lwd = 0.8) +
   labs(x = "Year", y = "GDP per capita") +
  ggtitle("Turkey: GDP per capita - NUTS3") +
   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

```

The plot above show the top 5 and bottom 5 NUTS3 regions in Turkey when considering GDP per capita.
If all nuts 3 regions was included, the plot would have been hard to read.

We can see that all of the top 5 NUTS3 regions have about the same development in GDP per capita.
The bottom 5 regions also has similar development between them in GDP per Capita.

We can also here see decrease in GDP per capita for all Turkish NUTS 3 regions during the financial crisis in 2008/2009.

#### The 3 wealthiest regions 2019

```{r wealthiest regions in Turkey 2019, echo=FALSE}


FI_TR_nuts3 %>%
  filter(grepl("TR...", id_nuts3), Year == 2019) %>%
  select(id_nuts3, GDP_per_capita) %>%
  slice_max(GDP_per_capita, n = 3)
```

The top three richest nuts 3 regions in 2019 are TR100 - Istanbul, TR421 - Kocaeli, and TR510 - Ankara.
It is not surprising to see Istanbul and Ankara on the top three list.
Istanbul is the largest city in Turkey, and is located in the European part of Turkey, and Ankara is the country's capital city.

#### The 3 least wealthiest regions in 2019

```{r Turkeys least wealthiest regions 2019, echo=FALSE}

FI_TR_nuts3 %>%
  filter(grepl("TR...", id_nuts3), Year == 2019) %>%
  select(id_nuts3, GDP_per_capita) %>%
  slice_min(GDP_per_capita, n = 3)
```

The NUTS3 regions in Turkey with the lowest GDP per capita is; TRA21 - Agri, TRC21 - Sanliurfa, and TRB21 - Van.
The richest NUTS3 region has 5.2 times higher GDP per capita than the poorest region.
That is a notable difference, and one of the reasons might be that Istanbul is in Europe and Agri is located in the eastern part of Turkey and in Asia.

## Regional inequity

### Calculation of the population watertight GDP Ginie coefficients for the European NUTS2 () level.

The calculation of the Gini-coeffisient is as follows:

$$
GINW_j=\frac{1}{2 \bar{y_j}} \sum_{i}^{n_j}\sum_{l}^{n_j}\frac{p_i}{P_j} \frac{p_l}{P_j} |y_i-y_l|
$$

This coefficient lies between 0 and 1, where 0 means the region is equal when it comes to income among the population, while 1 means that the region is unequal.

```{r calculation of gini for all nuts2 regions in dataset}

GDPperCap_all_nuts3$GDP_per_capita <- as.numeric(GDPperCap_all_nuts3$GDP_per_capita)
GDPperCap_all_nuts3$Population <- as.numeric(GDPperCap_all_nuts3$Population)

gini.wtd(GDPperCap_all_nuts3$GDP_per_capita, weights = GDPperCap_all_nuts3$Population)
```

The GINI coefficient for all NUTS2 regions combined in the dataset is 0.401, which means that the regions is more equal than unequal when it comes to income.

```{r mutate ids, echo=FALSE}
#Nuts 2 id
GDPperCap_all_nuts3 <- GDPperCap_all_nuts3 %>%  
  mutate(id_nuts2 = substr(GDPperCap_all_nuts3$`Region_code`,1,4))
#Nuts 2 id
GDPperCap_all_nuts3 <- GDPperCap_all_nuts3 %>%  
  mutate(id_nuts0 = substr(GDPperCap_all_nuts3$`Region_code`,1,2))
```

```{r calculation  of gini for all the different nuts 2 regions}
GDPperCap_all_nuts3  %<>% 
  group_by(id_nuts2, Year) %>% 
  mutate(gini_n2 = gini.wtd(GDP_per_capita, w = Population)) %>%
  ungroup() # to remove grouping
```

#### Gini-cofficients by country:

```{r Gini per country, echo=FALSE}
GDPperCap_all_nuts3 %>%  
  distinct(id_nuts0, Year, .keep_all = TRUE) %>%  

  ggplot(aes(x = Year,
        y = gini_n2, 
        fill = id_nuts0, 
        color = id_nuts0,
        group = id_nuts0)) +
  geom_line(lwd = 0.8) +
  labs(x = "Year", y = "Gini") +
  ggtitle("Gini-coefficient by country - NUTS0") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

We can see here that the GINI coefficient for each country is quite different.
The GINI-coefficients for Czech Republic and Turkey is zero for all years, which may indicate some of the data needed to calculate GINI is missing, and can be defined as outliers

Finland has the lowest GINI-coefficient, with the UK not far behind.
The low GINI-coefficient for Finland proves that it is a rich country.

#### Gini-coefficients for NUTS2 regions - Czech Republic

```{r Gini for Czech Republic, NUTS2, echo=FALSE}


  GDPperCap_all_nuts3 %>%
    filter(grepl("CZ..", id_nuts2)) %>% 
     ggplot(aes(x = Year, 
        y = gini_n2, 
        fill = id_nuts2, 
        color = id_nuts2,
        group = id_nuts2)) +
  geom_line(lwd = 0.8) +
  labs(x = "Year", y = "Gini") +
  ggtitle("Czech Republic: GINI - NUTS2") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

We can see that there are 5 NUTS2 regions in Czech Republic which has a GINI-coefficient that varies a lot over the years.
It also seems to be three with a GINI-coefficient of 0.
This is an indication that some of the data needed to calculate GINI is missing.
So these three is considered outliers.

##### GINI 2019

```{r Gini 2019 for Czech Republic - NUTS2, echo=FALSE}

hist_czechgini_nuts2 <- GDPperCap_all_nuts3 %>%
 filter(grepl("CZ..", id_nuts2), Year == 2019) %>% 
  distinct(id_nuts2, Year, gini_n2) %>% 
  ggplot(aes(x = gini_n2)) +
   geom_histogram(
    colour = "white", 
    fill = "green", 
    bins = 20, 
    alpha = 0.5) +
    labs(x = "Gini-coefficient") +
  ggtitle("Czech Republic: Gini 2019 - NUTS2")

 
dens_czechgini_nuts2 <- GDPperCap_all_nuts3 %>%
  filter(grepl("CZ..", id_nuts2)) %>%  
  distinct(id_nuts2, Year, gini_n2) %>% 
  ggplot(
    mapping = aes(x = gini_n2)) +
  geom_density(
    alpha = 0.2, 
    fill = "green") +
  labs(x = "Gini-coefficient") +
  ggtitle("Czech Republic: Gini 2019 - NUTS2")

grid.arrange(hist_czechgini_nuts2,
             dens_czechgini_nuts2, nrow = 1)
```

On these plots we see that the most observed value is 0.
The rest og the regions lies between 0.02 and 0.035, which inicates that they are very equal when considering income.

##### Ranking GINI-NUTS2 - 2019

```{r ranking gini Czech, echo=FALSE}
GDPperCap_all_nuts3 %>%
  filter(grepl("CZ..", id_nuts2), Year == 2019) %>% distinct(id_nuts2, gini_n2) %>% 
  select(id_nuts2, gini_n2) %>%
  slice_min(gini_n2, n = 8)
```

Yet again we see the outliers on top of the ranking, but when considering the other Regions, they are quite close to each other.
CZ03 - Jihozápad is the best of these.
CZ05 - Severovýchod is on the bottom of the ranking, but it still has a good GINI-coefficient.

#### Gini-coefficients for NUTS2 regions - Finland

```{r Gini for Finland, NUTS2, echo=FALSE}

  GDPperCap_all_nuts3 %>%
    filter(grepl("FI..", id_nuts2)) %>% 
    distinct(id_nuts2, Year, gini_n2) %>% 
     ggplot(aes(x = Year, 
        y = gini_n2, 
        fill = id_nuts2, 
        color = id_nuts2,
        group = id_nuts2)) +
  geom_line(lwd = 0.8) +
  labs(x = "Year", y = "Gini") +
  ggtitle("Finland: GINI - NUTS2") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

```

We can see that there are three NUTS2 regions in Finland which has a GINI-coefficient that varies over the years.
It also seems to be two with a GINI-coefficient of 0.
This is an indication that some of the data needed to calculate GINI is missing.
So two is considered outliers.

##### GINI 2019

```{r Gini 2019 for Finland - NUTS2, echo=FALSE}

hist_finlandgini_nuts2 <- GDPperCap_all_nuts3 %>%
filter(grepl("FI..", id_nuts2), Year == 2019) %>% 
distinct(id_nuts2, Year, gini_n2) %>% 
ggplot(aes(x = gini_n2)) +
  geom_histogram(
    colour = "white", 
    fill = "green", 
    bins = 20, 
    alpha = 0.5) +
  labs(x = "Gini-coefficient") +
  ggtitle("Finland: Gini 2019 - NUTS2")

 
dens_finlandgini_nuts2 <- GDPperCap_all_nuts3 %>%
filter(grepl("FI..", id_nuts2)) %>% 
distinct(id_nuts2, Year, gini_n2) %>% 
ggplot(
    mapping = aes(x = gini_n2, )) +
  geom_density(
    alpha = 0.2, 
    fill = "green") +
  labs(x = "Gini-coefficient") +
  ggtitle("Finland: Gini 2019 - NUTS2")

grid.arrange(hist_finlandgini_nuts2,
             dens_finlandgini_nuts2,
             nrow = 1)
```

On these plots we see that the most observed value is 0.
The rest of the regions lies between 0.025 and 0.04, which inicates that they are very equal when considering income.

##### Ranking GINI-NUTS2 - 2019

```{r ranking gini Finland, echo=FALSE}

GDPperCap_all_nuts3 %>%
  filter(grepl("FI..", id_nuts2), Year == 2019) %>% distinct(id_nuts2, gini_n2) %>% 
  select(id_nuts2, gini_n2) %>%
  slice_min(gini_n2, n = 5)
```

Yet again we see the outliers on top of the ranking, which are FI1B-Helsinki and FI20 - Åland.
It is quite surprising that there are data missig for Helsinki.

When considering the other regions, we see that they have GINI coefficients ranging from 0.028 and 0.04.
FI19 - Länsi-Suomi is the best of these.
FI1C - Etelä-Suomi is on the bottom of the ranking, but it still has a good GINI-coefficient of 0.04.

#### Gini-coefficients for NUTS2 regions - United Kingdom

```{r Gini for United Kingdom, NUTS2, echo=FALSE}


  GDPperCap_all_nuts3 %>%
    filter(grepl("TL..", id_nuts2)) %>% 
     ggplot(aes(x = Year, 
        y = gini_n2, 
        fill = id_nuts2, 
        color = id_nuts2,
        group = id_nuts2)) +
  geom_line(lwd = 0.8) +
   labs(x = "Year", y = "Gini") +
  ggtitle("United Kindom: GINI - NUTS2") +

  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = "none")
```

We can see that there are two NUTS2 regions in UK that stands out.
One has the highest GINI coefficient of all NUTS2 regions.
The rest have a GINI coefficient under 0.2.
There are also some outliers here, but hard to tell how many.

##### GINI 2019

```{r Gini 2019 for United Kingdom - NUTS2, echo=FALSE}


hist_ukgini_nuts2 <- GDPperCap_all_nuts3 %>%
filter(grepl("TL..", id_nuts2), Year == 2019) %>%  
distinct(id_nuts2, Year, gini_n2) %>% 
ggplot(aes(x = gini_n2)) +
  geom_histogram(
    colour = "white", 
    fill = "green", 
    bins = 20, 
    alpha = 0.5) +
  labs(x = "Gini-coefficient") +
  ggtitle("United Kingdom: Gini 2019 - NUTS2")

dens_ukgini_nuts2 <- GDPperCap_all_nuts3 %>%
  filter(grepl("TR..", id_nuts2)) %>%  
  distinct(id_nuts2, Year, gini_n2) %>% 
  ggplot(
    mapping = aes(x = gini_n2)) +
  geom_density(
    alpha = 0.2, 
    fill = "green") +
  xlim(0, 0.5) +
  labs(x = "Gini-coefficient") +
  ggtitle("United Kingdom: Gini 2019 - NUTS2")

grid.arrange(hist_ukgini_nuts2,
             dens_ukgini_nuts2,
             nrow = 1)
```

As confirmed above the majority of UK NUTS2 regions has a GINI-coefficient under 0.2.

The most observed value are around 0.05 with 8 observations.
For the previous countries it was the outiers that had the most observed value, but not in UKs case with 4 and 1.
The GINI-coefficient of about 0.45 is also a outlier, because it stands ouf from the rest of the regions.

##### Ranking GINI-NUTS2

```{r Top 5 gini UK, echo=FALSE}

GDPperCap_all_nuts3 %>%
  filter(grepl("TL..", id_nuts2), Year == 2019) %>% distinct(id_nuts2, gini_n2) %>% 
  select(id_nuts2, gini_n2) %>%
  slice_min(gini_n2, n = 5 )
```

Yet again we see the outliers on top of the ranking, which are Lincolnshire, Cornwall and Isles of Scilly and North Eastern Scotland.
Outer London - South is the region with the lowest GINI-coefficients on the top 5 list (apart from the outliers).

```{r Bottom 5 gini UK, echo=FALSE}
GDPperCap_all_nuts3 %>%
  filter(grepl("TL..", id_nuts2), Year == 2019) %>% distinct(id_nuts2, gini_n2) %>% 
  select(id_nuts2, gini_n2) %>%
  slice_max(gini_n2, n = 5) 

```

The outlier mentioned above with the highest GINI coefficient of all NUTS2 regions, is Inner London - West.
This might be because there are many homeless people with no income.

#### Gini-coefficients for NUTS2 regions - Turkey

```{r Gini for Turkey NUTS2, echo=FALSE}


  GDPperCap_all_nuts3 %>%
    filter(grepl("TR..", id_nuts2)) %>% 
     ggplot(aes(x = Year, 
        y = gini_n2, 
        fill = id_nuts2, 
        color = id_nuts2,
        group = id_nuts2)) +
  geom_line(lwd = 0.8) +
   labs(x = "Year", y = "Gini") +
  ggtitle("Turkey: GINI - NUTS2") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = "none")
```

None of the NUTS2 regions in Turkey stands out.
They are spread from a GINI-coefficient from 0 up to about 0.17.
Turkey seems to have the most similar regions when it comes to GINI-coefficients, apart from the outliers with 0.

##### GINI 2019

```{r Gini 2019 for Turkey - NUTS2, echo=FALSE}

hist_turkeygin_nuts2 <- GDPperCap_all_nuts3 %>%
filter(grepl("TR..", id_nuts2), Year == 2019) %>%  
distinct(id_nuts2, Year, gini_n2) %>%   
ggplot(aes(x = gini_n2)) +
  geom_histogram(
    colour = "white", 
    fill = "green", 
    bins = 20, 
    alpha = 0.5) +
    labs(x = "Gini-coefficient") +
  ggtitle("Turkey: Gini 2019 - NUTS2")

 
dens_turkeygini_nuts2 <- GDPperCap_all_nuts3 %>%
  filter(grepl("TR..", id_nuts2), Year == 2019) %>%  
  distinct(id_nuts2, Year, gini_n2) %>% 
  ggplot(
    mapping = aes(x = gini_n2)) +
  geom_density(
    alpha = 0.2, 
    fill = "green") +
  labs(x = "Gini-coefficient") +
  ggtitle("Turkey: Gini 2019 - NUTS2")

  grid.arrange(hist_turkeygin_nuts2,
             dens_turkeygini_nuts2, nrow = 1)

```

The findings above are confirmed here, the GINI-coefficients are distributed evenly between 0.025 and 0.075.

For the previous countries, except UK, it was the outiers that had the most observed value, but not in Turkeys case either.

##### Ranking GINI-NUTS2 - 2019

```{r Top 5 gini Turkey, echo=FALSE}
GDPperCap_all_nuts3 %>%
  filter(grepl("TR..", id_nuts2), Year == 2019) %>% distinct(id_nuts2, gini_n2) %>% 
  select(id_nuts2, gini_n2) %>%
  slice_min(gini_n2, n = 5)
```

Yet again we see the outliers on top of the ranking, which are, Istanbul, Izmir and Ankara.
This is surprising, as Istanbul is the largest city, and Ankara is the capital city.

Bursa, Eskisehir, Bilecik (as one region) is the region with the lowest GINI-coefficients on the top 5 list (apart from the outliers).

```{r Bottom 5 gini Turkey, echo=FALSE}
GDPperCap_all_nuts3 %>%
  filter(grepl("TR..", id_nuts2), Year == 2019) %>% distinct(id_nuts2, gini_n2) %>% 
  select(id_nuts2, gini_n2) %>%
  slice_max(gini_n2, n = 5)
```

We see that the region with the highest GINI-coefficient is Agri, Kars, Igdir, Ardahan (as one region)

## Assignment 2 (Crossectional Estimates) (S.d.W. 43)

Growth and inequity

**Estimate the effete of regional development** $y_j$ **on regional inequality** $GINIW_j$ **for the year 2010**

Economical development is the logarithm of GDP per capita, according to [@lessmann2017].
In this case that is regional development.

```{r echo=FALSE}

# creating new dataframe for 2010 - nuts 2
data2010_nuts2 <- GDPperCap_all_nuts3 %>% 
  filter(Year == 2010) %>% 
  select(GDP_per_capita, id_nuts2, gini_n2) %>% 
  mutate(log_gdp_pc = log(GDP_per_capita))
```

```{r}


# estimate for all countries
lm_allcountries <- lm(gini_n2~log_gdp_pc, data2010_nuts2) 

lm_allcountries
```

**Discuss the goodness of fit of your estimated model.**

**Plot the relationship between regional development** $y_j$ **and regional inequality** $GINIW_j$ **and the fitted line corresponding to your estimate.**

```{r}
# Save coefficients
b1_allcountries <- lm_allcountries$coefficients[1]
b2_allcountries <- lm_allcountries$coefficients[2]

data2010_nuts2 %>% 
  ggplot() +
  xlim(0, 15) +
  ylim(-0.3, 0.5) +
  geom_point(aes(x = log_gdp_pc, y = gini_n2)) +
  geom_abline(intercept = b1_allcountries, slope = b2_allcountries, colour = "green", size = 1) +
 theme_minimal()
```

**Plot the residuals against the predicted values of your model.**

**Discuss the classical assumptions OLS in light of your data and plots**

Other determinants of inequity

-   Download from [Eurostat](https://ec.europa.eu/eurostat/web/regions/data/database) for you subset of countries regional (NUTS2, j ) data related to transport infrastructure, education and demographics.
    Select on variable per category that you would like to explore further in there relationship to regional inequality $GINIW_j$ .

-   Estimate a multiple linear regression model with you new variables for 2010 and give a small interpretation of your findings.

-   Discuss the overall fit of your model

-   Discuss the inference related to your findings
